# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy on QA
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy_on_qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Create Products Env File
        working-directory: ./products
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URL }} >> .env
          echo MESSAGE_BROKER_URL=${{ secrets.MESSAGE_BROKER_URL }} >> .env
          echo PORT=${{ secrets.PRODUCTS_PORT }} >> .env
          cat .env
      - name: Create Shopping Env File
        working-directory: ./shopping
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URL }} >> .env
          echo MESSAGE_BROKER_URL=${{ secrets.MESSAGE_BROKER_URL }} >> .env
          echo PORT=${{ secrets.SHOPPING_PORT }} >> .env
          cat .env
      - name: Create Customer Env File
        working-directory: ./customer
        run: |
          touch .env
          echo APP_SECRET=${{ secrets.APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URL }} >> .env
          echo MESSAGE_BROKER_URL=${{ secrets.MESSAGE_BROKER_URL }} >> .env
          echo PORT=${{ secrets.CUSTOMER_PORT }} >> .env
          cat .env
      - name: Generate deployment package
        run: |
          zip -r deploy.zip . -x '*.git'
      - name: Deploy on Elastic beanstalk QA Env
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: "ms_tutorial"
          environment_name: "Mstutorial-env"
          version_label: "ver-${{ github.sha}}"
          region: ap-southeast-1
          deployment_package: deploy.zip
